// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Test.Infrastructure.Persistence;

#nullable disable

namespace Test.Infrastructure.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Test.Domain.Entities.Models.AnswerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<Guid?>("QuestionModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuestionModelId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.CriteriaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<int>>("QuestionIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Criterias");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.MessageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CriteriaModelId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MinPoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaModelId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.QuestionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.AnswerModel", b =>
                {
                    b.HasOne("Test.Domain.Entities.Models.QuestionModel", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionModelId");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.MessageModel", b =>
                {
                    b.HasOne("Test.Domain.Entities.Models.CriteriaModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("CriteriaModelId");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.CriteriaModel", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Test.Domain.Entities.Models.QuestionModel", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
